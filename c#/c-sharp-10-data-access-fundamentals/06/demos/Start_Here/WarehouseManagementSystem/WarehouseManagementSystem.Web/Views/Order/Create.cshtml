@model IEnumerable<WarehouseManagementSystem.Item>

@{
    ViewData["Title"] = "Create a new order";
}

<h1>Create a new order</h1>

<div class="row">
    <div class="col">
        <div class="row">
            <div class="h4">Customer details</div>                
            <div class="form-group">
                 <label for="name">Name</label>
                <input id="name" v-model="name" placeholder="Full name" class="form-control">
            </div>
            <div class="form-group">
                <label for="address">Address</label>
                <input id="address" v-model="address" placeholder="Customer delivery address" class="form-control">
            </div>
            <div class="form-group">
                <label for="postalCode">Postal Code</label>
                <input id="postalCode" v-model="postalCode" placeholder="### ##" class="form-control">
            </div>
            <div class="form-group">
                <label for="country">Country</label>
                <input id="country" v-model="country" placeholder="Sweden" class="form-control">
            </div>
            <div class="form-group">
                <label for="postalCode">Phone Number</label>
                <input id="phoneNumber" v-model="phoneNumber" placeholder="+46 111 111 11" class="form-control">
            </div>
        </div>
        <div class="row">
            <div class="h4">Add items to order</div>
            <div class="form-row">
                <div class="form-group">
                    <label>Select item</label>
                    <select v-model="selectedItem" class="form-control" id="item">
                        <option disabled value="">Please select one</option>
                        @foreach (var item in Model)
                        {
                            <option value="@item.Id"
                                    v-bind:value="{ itemId: '@item.Id', name: '@item.Name', price: @item.Price.ToString(System.Globalization.CultureInfo.InvariantCulture) }">
                                @item.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="form-group">
                    <label>Quantity</label>
                    <input v-model="selectedQuantity" class="form-control" id="quantity" type="number" value="1" />
                </div>
                <button v-on:click="add" :disabled='canAddToOrder' class="btn btn-outline-success">Add to order</button>
            </div>
        </div>
    </div>
    <div class="col">
        <div class="h4">Line items</div>
        <div>
            <div class="form-group">   
                <ul class="list-group">
                    <li v-for="line in lineItems" :key="item.id" class="list-group-item d-flex justify-content-between lh-condensed">
                        <div>
                            <h6>{{ line.item.name }}</h6>
                            <small class="text-muted">Quantity: {{ line.quantity }}</small>
                        </div>
                        <span class="text-muted">${{ line.item.price *  line.quantity }}</span>
                    </li>

                    <li class="list-group-item">
                        <span>Total (USD)</span>
                        <strong>${{ totalPrice }}</strong>
                    </li>
                </ul>
            </div>
            <div class="form-group">
                <button v-on:click="submit" :disabled='canSubmitOrder' class="btn btn-success">CREATE ORDER</button>
            </div>
        </div>
    </div>
</div>
<div  id="orderSuccess" class="modal fade" tabindex="-1" role="dialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Order Creation</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary close" data-dismiss="modal">OK</button>
      </div>
    </div>
  </div>
</div>

@section Scripts
{
    <script type="text/javascript">
            var app = new Vue({
                el: '#app',
                data: {
                    name: null,
                    address: null,
                    postalCode: null,
                    country: null,
                    phoneNumber: null,
                    selectedItem: '',
                    selectedQuantity: 1,
                    totalPrice: 0,
                    lineItems: new Array()
                },
                computed: {
                    canSubmitOrder: function () {
                        return this.lineItems.length == 0 || this.name == null
                    },
                    canAddToOrder: function () {
                        return this.selectedItem == ''
                    }
                },
                methods: {
                    add: function () {
                        var lineItem = {
                            item: this.selectedItem,
                            quantity: this.selectedQuantity
                        }

                        if (item == null) return

                        this.lineItems.push(lineItem)

                        this.totalPrice += lineItem.item.price * lineItem.quantity
                    },
                    submit: function () {
                        var data = {
                            customer: {
                                name: this.name,
                                address: this.address,
                                postalCode: this.postalCode,
                                country: this.country,
                                phoneNumber: this.phoneNumber
                            },
                            lineItems: this.lineItems.map(function (line) {
                                return {
                                    itemId: line.item.itemId,
                                    quantity: line.quantity
                                }
                            })
                        }

                        $.ajax({
                            url: "/Order/Create",
                            data: data,
                            type: 'post',
                            error: function (XMLHttpRequest, textStatus, errorThrown) {
                                $(".modal-body").html("<strong>ERROR</strong><p>" + XMLHttpRequest.responseText + "</p>")
                                $('#orderSuccess').modal('show')
                            },
                            success: function (data) {
                                $(".modal-body").html("<strong>Success!</strong><p>The order was successfully created</p>")
                                $('#orderSuccess').modal('show')
                            }
                        });
                    }
                }
            });

        $('.close').click(function() {
            $('#orderSuccess').modal('hide')
        });
    </script>
}